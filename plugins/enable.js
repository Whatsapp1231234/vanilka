//import db from '../lib/database.js'

let handler = async (m, { conn, usedPrefix, command, args, isOwner, isAdmin, isROwner }) => {
	
const sections = [
   {
	title: `‚â° –°–ø–∏—Å–æ–∫ –æ–ø—Ü–∏–π`,
	rows: [
	{title: "üîÆ | –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ", rowId: `${usedPrefix + command} –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ`},
	{title: "üåé | Public", rowId: `${usedPrefix + command} public`},
	{title: "üîû | 18+", rowId: `${usedPrefix + command} 18+`},
	{title: "üß¨ | –ê–Ω—Ç–∏–∞—Ä–∞–±", rowId: `${usedPrefix + command} –∞–Ω—Ç–∏–∞—Ä–∞–±`},
	{title: "üîó | –ê–Ω—Ç–∏—Å—Å—ã–ª–∫–∞", rowId: `${usedPrefix + command} –∞–Ω—Ç–∏—Å—Å—ã–ª–∫–∞`},
    {title: "üö´ | –ê–Ω—Ç–∏—É–¥–∞–ª–µ–Ω–∏–µ", rowId: `${usedPrefix + command} –∞–Ω—Ç–∏—É–¥–∞–ª–µ–Ω–∏–µ`},
	{title: "‚èèÔ∏è | –ê–≤—Ç–æ—É—Ä–æ–≤–µ–Ω—å", rowId: `${usedPrefix + command} –∞–≤—Ç–æ—É—Ä–æ–≤–µ–Ω—å`},
	{title: "üó£Ô∏è | –ß–∞—Ç–±–æ—Ç", rowId: `${usedPrefix + command} —á–∞—Ç–±–æ—Ç`},
	{title: "üîé | –°–ª–µ–∂–∫–∞", rowId: `${usedPrefix + command} —Å–ª–µ–∂–∫–∞`},
	{title: "üìë | –î–æ–∫—É–º–µ–Ω—Ç", rowId: `${usedPrefix + command} –¥–æ–∫—É–º–µ–Ω—Ç`},
	{title: "üõ°Ô∏è | –ë–æ—Ç–∞–¥–º–∏–Ω", rowId: `${usedPrefix + command} –±–æ—Ç–∞–¥–º–∏–Ω`},
	{title: "üí¨ | OnlyPv", rowId: `${usedPrefix + command} onlydm`},
	{title: "üë• | OnlyGp", rowId: `${usedPrefix + command} onlygp`},
  {title: "üîó | –ê–ù–¢–ò–°–°–´–õ–ö–ê 2",  rowId: `${usedPrefix + command} –∞–Ω—Ç–∏—Å—Å—ã–ª–∫–∞2`},
	]
    },
]

const listMessage = {
  text: '\n–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –¥–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è –∏ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–π',
  footer: fgig,
  title: `‚â° –°–ø–∏—Å–æ–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π`,
  buttonText: "–ù–∞–∂–º–∏ –∑–¥–µ—Å—å",
  sections
}

  let isEnable = /–≤–∫–ª—é—á–∏—Ç—å|enable|(turn)?on|1/i.test(command)
  let chat = global.db.data.chats[m.chat]
  let user = global.db.data.users[m.sender]
  let bot = global.db.data.settings[conn.user.jid] || {}
  let type = (args[0] || '').toLowerCase()
  let isAll = false, isUser = false
  switch (type) {
    case '–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ':
    case 'bv':
    case 'bienvenida':
      if (!m.isGroup) {
        if (!isOwner) {
          global.dfail('group', m, conn)
          throw false
        }
      } else if (!isAdmin) {
        global.dfail('admin', m, conn)
        throw false
      }
      chat.welcome = isEnable
      break
      
      case '—Å–ª–µ–∂–∫–∞':
      case 'detector':
        if (!m.isGroup) {
         if (!isOwner) {
           global.dfail('group', m, conn)
          throw false
        }
       } else if (!isAdmin) {
         global.dfail('admin', m, conn)
         throw false
       }
       chat.detect = isEnable
     break
    
    case '–∞–Ω—Ç–∏—É–¥–∞–ª–µ–Ω–∏–µ':
    case 'delete':
      if (m.isGroup) {
        if (!(isAdmin || isOwner)) {
          global.dfail('admin', m, conn)
          throw false
        }
      }
      chat.delete = !isEnable
      break

    case '–¥–æ–∫—É–º–µ–Ω—Ç':
    case 'documento':
    if (m.isGroup) {
        if (!(isAdmin || isOwner)) return dfail('admin', m, conn)
      }
    chat.useDocument = isEnable
    break
    case 'public':
    case 'publico':
      isAll = true
      if (!isROwner) {
        global.dfail('rowner', m, conn)
        throw false
      }
      global.opts['self'] = !isEnable
      break
    case '–∞–Ω—Ç–∏—Å—Å—ã–ª–∫–∞':
    case 'antilinkwa':
    case 'antilinkwha':
      if (m.isGroup) {
        if (!(isAdmin || isOwner)) {
          global.dfail('admin', m, conn)
          throw false
        }
      }
      chat.antiLink = isEnable
      break

      case '–∞–Ω—Ç–∏—Å—Å—ã–ª–∫–∞2':
if (m.isGroup) {
if (!(isAdmin || isOwner)) {
global.dfail('admin', m, conn)
throw false
}}
chat.antiLink2 = isEnable          
break
      
      case '–∞–Ω—Ç–∏–∞—Ä–∞–±':
      case 'sololatino':
      case 'onlylatinos':
      case 'onlylat':
      case 'onlylatan':
      case 'sololatan':
      if (m.isGroup) {
        if (!(isAdmin || isOwner)) {
          global.dfail('admin', m, conn)
          throw false
        }
      }
      
      chat.onlyLatinos = isEnable
      break
      
      case 'nsfw':
      case '18+':
       if (m.isGroup) {
         if (!(isAdmin || isOwner)) {
           global.dfail('admin', m, conn)
            throw false
           }}
    chat.nsfw = isEnable          
    break

    case '–∞–≤—Ç–æ—É—Ä–æ–≤–µ–Ω—å':
    isUser = true
     user.autolevelup = isEnable
     break
     
     case '—á–∞—Ç–±–æ—Ç':
     case 'autosimi':
     case 'autosimsimi':
      isUser = true
      user.chatbot = isEnable
     break
     
    case '–±–æ—Ç–∞–¥–º–∏–Ω':
    case 'restringir':
      isAll = true
      if (!isOwner) {
        global.dfail('owner', m, conn)
        throw false
      }
      bot.restrict = isEnable
      break
    
    case 'onlypv':
    case 'onlydm':
    case 'onlymd':
    case 'solopv':
      isAll = true
      if (!isROwner) {
        global.dfail('rowner', m, conn)
        throw false
      }
      global.opts['pconly'] = isEnable
      break
      
    case 'gponly':
    case 'onlygp':
    case 'grouponly':
    case 'sologp':
    case 'sologrupo':
      isAll = true
      if (!isROwner) {
        global.dfail('rowner', m, conn)
        throw false
      }
      global.opts['gconly'] = isEnable
      break
      
    default:
      if (!/[01]/.test(command)) return m.reply(`
‚â° –°–ø–∏—Å–æ–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π


*üìå –ü—Ä–∏–º–µ—Ä :*
*${usedPrefix}–≤–∫–ª—é—á–∏—Ç—å* –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
*${usedPrefix}–≤—ã–∫–ª—é—á–∏—Ç—å* –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
`)
      throw false
}

m.reply(`
‚úÖ *${type}* –§—É–Ω–∫—Ü–∏—è *${isEnable ? '–í–∫–ª—é—á–µ–Ω–∞' : '–í—ã–∫–ª—é—á–µ–Ω–∞'}* ${isAll ? '–¥–ª—è –±–æ—Ç–∞' : isUser ? '' : '–¥–ª—è –≥—Ä—É–ø–ø—ã'}
`.trim()) 

}
handler.help = ['–≤–∫–ª', '–≤—ã–∫–ª'].map(v => v + '—é—á–∏—Ç—å <–æ–ø—Ü–∏—è>')
handler.tags = ['–û–ø—Ü–∏–∏']
handler.command = /^((en|dis)able|(–≤–∫–ª|–≤—ã–∫–ª)—é—á–∏—Ç—å|(turn)?o(n|ff)|[01])$/i

export default handler
